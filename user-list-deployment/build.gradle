import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'base'
}

configurations {
    applicationJar
}

dependencies {
    applicationJar project(path: ':user-list-app', configuration: 'bootArchives')
}

task copyApplicationJar(type: Copy) {
    from {
        configurations.applicationJar
    }
    into 'build/dependencies'
}

task buildImage(type: Exec, group: 'build') {
    description = 'Builds the Docker image with the app JAR'
    dependsOn copyApplicationJar
    executable = 'docker'

    args = [
            'build',
            '--build-arg', "APP_JAR_VERSION=${project.version}",
            '-t', "user-list-app:${project.version}",
            '-t', "user-list-app:latest",
            '-t', "${AZURE_ACR_ADDR_DEV}/user-list-app:${project.version}",
            '-t', "${AZURE_ACR_ADDR_DEV}/user-list-app:latest",
            '.'
    ]
}

task runContainer(type: Exec) {
    description = 'Runs container with the app JAR locally in Docker'
    dependsOn buildImage
    executable = 'docker'

    args = [
            'run',
            '-d',
            '-p', "8080:8080",
            '--name', 'user-list-app',
            "user-list-app:latest"
    ]
}

task copyClusterConfig(type: Copy) {
    from 'src/k8s'
    into 'build/k8s'
    include '**/*.yml'

    filter(ReplaceTokens, beginToken: '{{ ', endToken: ' }}', tokens: [
            'imageName': "${AZURE_ACR_ADDR_DEV}/user-list-app:${project.version}" as String,
            'version'  : project.version
    ])
}

def appId = System.getenv('AZURE_SP_APP_ID')
def password = System.getenv('AZURE_SP_PASSWORD')

task publishImage {
    description = 'Publishes the image with the app JAR to to Azure Container Registry resources'
    doLast {
        project.exec {
            executable = 'az.cmd'

            args = [
                    'acr', 'login',
                    '--name', "${AZURE_ACR_NAME_DEV}",
                    '--password', "$password",
                    '--username', "$appId"
            ]
        }

        project.exec {
            executable = 'docker'
            args = ['push', "${AZURE_ACR_ADDR_DEV}/user-list-app:1.0.0"]
        }
    }
}

assemble.dependsOn buildImage
